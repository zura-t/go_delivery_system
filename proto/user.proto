syntax = "proto3";

package proto;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/zura-t/go_delivery_system/pb";

message User{
  int64 id = 1;
  string email = 2;
  string name = 3;
  string phone = 4;
  google.protobuf.Timestamp created_at = 5;
}

message UserId{
  int64 id = 1;
}

message CreateUserRequest{
  string email = 1;
  string name = 2;
  string password = 3;
}

message CreateUserResponse {
  User user = 1;
}

message LoginUserRequest {
  string email = 1;
  string password = 2;
}

message LoginUserResponse {
  User user = 1;
  string access_token = 2;
  string refresh_token = 3;
  google.protobuf.Timestamp access_token_expires_at = 4;
  google.protobuf.Timestamp refresh_token_expires_at = 5;
}

message UpdateUserRequest{
  int64 id = 1;
  string name = 2;
}

message UpdateUserResponse {
  User user = 1;
}

message AddPhoneRequest{
  int64 id = 1;
  string phone = 2;
}

service UsersService {
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
    option (google.api.http) = {
      post: "/v1/users"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to create a new user";
      summary: "Create new user";
    };
  };
  rpc LoginUser(LoginUserRequest) returns (LoginUserResponse) {
    option (google.api.http) = {
      post: "/v1/login"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to login.";
      summary: "Login";
    };
  };
  rpc GetUser(UserId) returns (User) {
    option (google.api.http) = {
      get: "/v1/users/my_profile"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to get profile";
      summary: "Get profile";
    };
  };
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {
    option (google.api.http) = {
      patch: "/v1/users"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to update user";
      summary: "Update user";
    };
  };
  rpc AddPhone(AddPhoneRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      patch: "/v1/users/add_phone"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to add phone number";
      summary: "Add phone number";
    };
  };
  rpc DeleteUser(UserId) returns (google.protobuf.Empty) {
    option (google.api.http) = {
    delete: "/v1/users"
  };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    description: "Use this API to delete profile";
    summary: "Delete user";
  };
};
}